/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.c
  * @brief          : Main program body
  ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  * All rights reserved.</center></h2>
  *
  * This software component is licensed by ST under BSD 3-Clause license,
  * the "License"; You may not use this file except in compliance with the
  * License. You may obtain a copy of the License at:
  *                        opensource.org/licenses/BSD-3-Clause
  *
  ******************************************************************************
  */
/* USER CODE END Header */

/* Includes ------------------------------------------------------------------*/
#include "main.h"

/* Private includes ----------------------------------------------------------*/
/* USER CODE BEGIN Includes */

/* USER CODE END Includes */

/* Private typedef -----------------------------------------------------------*/
/* USER CODE BEGIN PTD */

/* USER CODE END PTD */

/* Private define ------------------------------------------------------------*/
/* USER CODE BEGIN PD */
/* USER CODE END PD */

/* Private macro -------------------------------------------------------------*/
/* USER CODE BEGIN PM */

/* USER CODE END PM */

/* Private variables ---------------------------------------------------------*/
DAC_HandleTypeDef hdac1;

UART_HandleTypeDef huart2;

/* USER CODE BEGIN PV */

/* USER CODE END PV */

/* Private function prototypes -----------------------------------------------*/
void SystemClock_Config(void);
static void MX_GPIO_Init(void);
static void MX_DAC1_Init(void);
static void MX_USART2_UART_Init(void);
/* USER CODE BEGIN PFP */

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
const uint16_t sine_table_size = 1001;
const uint16_t sine_table[]= {
    2047, 2056, 2065, 2074, 2083, 2092, 2101, 2110, 2119, 2128,
    2137, 2146, 2156, 2165, 2174, 2183, 2192, 2201, 2210, 2219,
    2228, 2237, 2246, 2255, 2264, 2273, 2282, 2291, 2300, 2309,
    2318, 2327, 2336, 2345, 2353, 2362, 2371, 2380, 2389, 2398,
    2407, 2415, 2424, 2433, 2442, 2450, 2459, 2468, 2477, 2485,
    2494, 2503, 2511, 2520, 2528, 2537, 2546, 2554, 2563, 2571,
    2580, 2588, 2596, 2605, 2613, 2622, 2630, 2638, 2647, 2655,
    2663, 2671, 2679, 2688, 2696, 2704, 2712, 2720, 2728, 2736,
    2744, 2752, 2760, 2768, 2776, 2784, 2791, 2799, 2807, 2815,
    2822, 2830, 2838, 2845, 2853, 2860, 2868, 2875, 2883, 2890,
    2898, 2905, 2912, 2920, 2927, 2934, 2941, 2948, 2955, 2962,
    2969, 2976, 2983, 2990, 2997, 3004, 3011, 3018, 3024, 3031,
    3038, 3044, 3051, 3057, 3064, 3070, 3077, 3083, 3090, 3096,
    3102, 3108, 3114, 3121, 3127, 3133, 3139, 3145, 3151, 3156,
    3162, 3168, 3174, 3179, 3185, 3191, 3196, 3202, 3207, 3213,
    3218, 3223, 3229, 3234, 3239, 3244, 3249, 3254, 3259, 3264,
    3269, 3274, 3279, 3283, 3288, 3293, 3297, 3302, 3307, 3311,
    3315, 3320, 3324, 3328, 3333, 3337, 3341, 3345, 3349, 3353,
    3357, 3361, 3364, 3368, 3372, 3375, 3379, 3383, 3386, 3389,
    3393, 3396, 3399, 3403, 3406, 3409, 3412, 3415, 3418, 3421,
    3424, 3426, 3429, 3432, 3434, 3437, 3440, 3442, 3444, 3447,
    3449, 3451, 3453, 3456, 3458, 3460, 3462, 3463, 3465, 3467,
    3469, 3471, 3472, 3474, 3475, 3477, 3478, 3479, 3481, 3482,
    3483, 3484, 3485, 3486, 3487, 3488, 3489, 3490, 3490, 3491,
    3492, 3492, 3493, 3493, 3493, 3494, 3494, 3494, 3494, 3494,
    3495, 3494, 3494, 3494, 3494, 3494, 3493, 3493, 3493, 3492,
    3492, 3491, 3490, 3490, 3489, 3488, 3487, 3486, 3485, 3484,
    3483, 3482, 3481, 3479, 3478, 3477, 3475, 3474, 3472, 3471,
    3469, 3467, 3465, 3463, 3462, 3460, 3458, 3456, 3453, 3451,
    3449, 3447, 3444, 3442, 3440, 3437, 3434, 3432, 3429, 3426,
    3424, 3421, 3418, 3415, 3412, 3409, 3406, 3403, 3399, 3396,
    3393, 3389, 3386, 3383, 3379, 3375, 3372, 3368, 3364, 3361,
    3357, 3353, 3349, 3345, 3341, 3337, 3333, 3328, 3324, 3320,
    3315, 3311, 3307, 3302, 3297, 3293, 3288, 3283, 3279, 3274,
    3269, 3264, 3259, 3254, 3249, 3244, 3239, 3234, 3229, 3223,
    3218, 3213, 3207, 3202, 3196, 3191, 3185, 3179, 3174, 3168,
    3162, 3156, 3151, 3145, 3139, 3133, 3127, 3121, 3114, 3108,
    3102, 3096, 3090, 3083, 3077, 3070, 3064, 3057, 3051, 3044,
    3038, 3031, 3024, 3018, 3011, 3004, 2997, 2990, 2983, 2976,
    2969, 2962, 2955, 2948, 2941, 2934, 2927, 2920, 2912, 2905,
    2898, 2890, 2883, 2875, 2868, 2860, 2853, 2845, 2838, 2830,
    2822, 2815, 2807, 2799, 2791, 2784, 2776, 2768, 2760, 2752,
    2744, 2736, 2728, 2720, 2712, 2704, 2696, 2688, 2679, 2671,
    2663, 2655, 2647, 2638, 2630, 2622, 2613, 2605, 2596, 2588,
    2580, 2571, 2563, 2554, 2546, 2537, 2528, 2520, 2511, 2503,
    2494, 2485, 2477, 2468, 2459, 2450, 2442, 2433, 2424, 2415,
    2407, 2398, 2389, 2380, 2371, 2362, 2353, 2345, 2336, 2327,
    2318, 2309, 2300, 2291, 2282, 2273, 2264, 2255, 2246, 2237,
    2228, 2219, 2210, 2201, 2192, 2183, 2174, 2165, 2156, 2146,
    2137, 2128, 2119, 2110, 2101, 2092, 2083, 2074, 2065, 2056,
    2047, 2037, 2028, 2019, 2010, 2001, 1992, 1983, 1974, 1965,
    1956, 1947, 1937, 1928, 1919, 1910, 1901, 1892, 1883, 1874,
    1865, 1856, 1847, 1838, 1829, 1820, 1811, 1802, 1793, 1784,
    1775, 1766, 1757, 1748, 1740, 1731, 1722, 1713, 1704, 1695,
    1686, 1678, 1669, 1660, 1651, 1643, 1634, 1625, 1616, 1608,
    1599, 1590, 1582, 1573, 1565, 1556, 1547, 1539, 1530, 1522,
    1513, 1505, 1497, 1488, 1480, 1471, 1463, 1455, 1446, 1438,
    1430, 1422, 1414, 1405, 1397, 1389, 1381, 1373, 1365, 1357,
    1349, 1341, 1333, 1325, 1317, 1309, 1302, 1294, 1286, 1278,
    1271, 1263, 1255, 1248, 1240, 1233, 1225, 1218, 1210, 1203,
    1195, 1188, 1181, 1173, 1166, 1159, 1152, 1145, 1138, 1131,
    1124, 1117, 1110, 1103, 1096, 1089, 1082, 1075, 1069, 1062,
    1055, 1049, 1042, 1036, 1029, 1023, 1016, 1010, 1003, 997,
    991, 985, 979, 972, 966, 960, 954, 948, 942, 937,
    931, 925, 919, 914, 908, 902, 897, 891, 886, 880,
    875, 870, 864, 859, 854, 849, 844, 839, 834, 829,
    824, 819, 814, 810, 805, 800, 796, 791, 786, 782,
    778, 773, 769, 765, 760, 756, 752, 748, 744, 740,
    736, 732, 729, 725, 721, 718, 714, 710, 707, 704,
    700, 697, 694, 690, 687, 684, 681, 678, 675, 672,
    669, 667, 664, 661, 659, 656, 653, 651, 649, 646,
    644, 642, 640, 637, 635, 633, 631, 630, 628, 626,
    624, 622, 621, 619, 618, 616, 615, 614, 612, 611,
    610, 609, 608, 607, 606, 605, 604, 603, 603, 602,
    601, 601, 600, 600, 600, 599, 599, 599, 599, 599,
    599, 599, 599, 599, 599, 599, 600, 600, 600, 601,
    601, 602, 603, 603, 604, 605, 606, 607, 608, 609,
    610, 611, 612, 614, 615, 616, 618, 619, 621, 622,
    624, 626, 628, 630, 631, 633, 635, 637, 640, 642,
    644, 646, 649, 651, 653, 656, 659, 661, 664, 667,
    669, 672, 675, 678, 681, 684, 687, 690, 694, 697,
    700, 704, 707, 710, 714, 718, 721, 725, 729, 732,
    736, 740, 744, 748, 752, 756, 760, 765, 769, 773,
    778, 782, 786, 791, 796, 800, 805, 810, 814, 819,
    824, 829, 834, 839, 844, 849, 854, 859, 864, 870,
    875, 880, 886, 891, 897, 902, 908, 914, 919, 925,
    931, 937, 942, 948, 954, 960, 966, 972, 979, 985,
    991, 997, 1003, 1010, 1016, 1023, 1029, 1036, 1042, 1049,
    1055, 1062, 1069, 1075, 1082, 1089, 1096, 1103, 1110, 1117,
    1124, 1131, 1138, 1145, 1152, 1159, 1166, 1173, 1181, 1188,
    1195, 1203, 1210, 1218, 1225, 1233, 1240, 1248, 1255, 1263,
    1271, 1278, 1286, 1294, 1302, 1309, 1317, 1325, 1333, 1341,
    1349, 1357, 1365, 1373, 1381, 1389, 1397, 1405, 1414, 1422,
    1430, 1438, 1446, 1455, 1463, 1471, 1480, 1488, 1497, 1505,
    1513, 1522, 1530, 1539, 1547, 1556, 1565, 1573, 1582, 1590,
    1599, 1608, 1616, 1625, 1634, 1643, 1651, 1660, 1669, 1678,
    1686, 1695, 1704, 1713, 1722, 1731, 1740, 1748, 1757, 1766,
    1775, 1784, 1793, 1802, 1811, 1820, 1829, 1838, 1847, 1856,
    1865, 1874, 1883, 1892, 1901, 1910, 1919, 1928, 1937, 1947,
    1956, 1965, 1974, 1983, 1992, 2001, 2010, 2019, 2028, 2037
};

/* USER CODE END 0 */

/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
  /* USER CODE BEGIN 1 */
  uint8_t n = 0;
  /* USER CODE END 1 */
  

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_DAC1_Init();
  MX_USART2_UART_Init();
  /* USER CODE BEGIN 2 */

  HAL_DAC_Start(&hdac1, DAC_CHANNEL_1);

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
	HAL_DAC_SetValue(&hdac1, DAC_CHANNEL_1, DAC_ALIGN_12B_R, 256 + n++);
	HAL_Delay(1);
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
  }
  /* USER CODE END 3 */
}

/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};

  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  {
    Error_Handler();
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
  {
    Error_Handler();
  }
}

/**
  * @brief DAC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_DAC1_Init(void)
{

  /* USER CODE BEGIN DAC1_Init 0 */

  /* USER CODE END DAC1_Init 0 */

  DAC_ChannelConfTypeDef sConfig = {0};

  /* USER CODE BEGIN DAC1_Init 1 */

  /* USER CODE END DAC1_Init 1 */
  /** DAC Initialization 
  */
  hdac1.Instance = DAC1;
  if (HAL_DAC_Init(&hdac1) != HAL_OK)
  {
    Error_Handler();
  }
  /** DAC channel OUT1 config 
  */
  sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
  if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
  {
    Error_Handler();
  }
  /* USER CODE BEGIN DAC1_Init 2 */

  /* USER CODE END DAC1_Init 2 */

}

/**
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{

  /* USER CODE BEGIN USART2_Init 0 */

  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
  huart2.Init.BaudRate = 38400;
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
  huart2.Init.StopBits = UART_STOPBITS_1;
  huart2.Init.Parity = UART_PARITY_NONE;
  huart2.Init.Mode = UART_MODE_TX_RX;
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  if (HAL_UART_Init(&huart2) != HAL_OK)
  {
    Error_Handler();
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}

/**
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
  __HAL_RCC_GPIOF_CLK_ENABLE();
  __HAL_RCC_GPIOA_CLK_ENABLE();
  __HAL_RCC_GPIOB_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);

  /*Configure GPIO pin : LD2_Pin */
  GPIO_InitStruct.Pin = LD2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);

}

/* USER CODE BEGIN 4 */

/* USER CODE END 4 */

/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}

#ifdef  USE_FULL_ASSERT
/**
  * @brief  Reports the name of the source file and the source line number
  *         where the assert_param error has occurred.
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(char *file, uint32_t line)
{ 
  /* USER CODE BEGIN 6 */
  /* User can add his own implementation to report the file name and line number,
     tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
  /* USER CODE END 6 */
}
#endif /* USE_FULL_ASSERT */

/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
