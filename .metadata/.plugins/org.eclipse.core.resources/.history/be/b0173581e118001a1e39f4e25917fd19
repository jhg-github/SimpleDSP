/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.c
  * @brief          : Main program body
  ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  * All rights reserved.</center></h2>
  *
  * This software component is licensed by ST under BSD 3-Clause license,
  * the "License"; You may not use this file except in compliance with the
  * License. You may obtain a copy of the License at:
  *                        opensource.org/licenses/BSD-3-Clause
  *
  ******************************************************************************
  */
/* USER CODE END Header */

/* Includes ------------------------------------------------------------------*/
#include "main.h"

/* Private includes ----------------------------------------------------------*/
/* USER CODE BEGIN Includes */

/* USER CODE END Includes */

/* Private typedef -----------------------------------------------------------*/
/* USER CODE BEGIN PTD */

/* USER CODE END PTD */

/* Private define ------------------------------------------------------------*/
/* USER CODE BEGIN PD */
/* USER CODE END PD */

/* Private macro -------------------------------------------------------------*/
/* USER CODE BEGIN PM */

/* USER CODE END PM */

/* Private variables ---------------------------------------------------------*/
DAC_HandleTypeDef hdac1;

UART_HandleTypeDef huart2;

/* USER CODE BEGIN PV */

/* USER CODE END PV */

/* Private function prototypes -----------------------------------------------*/
void SystemClock_Config(void);
static void MX_GPIO_Init(void);
static void MX_DAC1_Init(void);
static void MX_USART2_UART_Init(void);
/* USER CODE BEGIN PFP */

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
const sine_table_size = 1000;
const uint16_t sine_table[sine_table_size]= {
    2047, 2051, 2056, 2060, 2065, 2069, 2074, 2078, 2083, 2087,
    2092, 2097, 2101, 2106, 2110, 2115, 2119, 2124, 2128, 2133,
    2137, 2142, 2146, 2151, 2156, 2160, 2165, 2169, 2174, 2178,
    2183, 2187, 2192, 2196, 2201, 2205, 2210, 2214, 2219, 2223,
    2228, 2232, 2237, 2242, 2246, 2251, 2255, 2260, 2264, 2269,
    2273, 2278, 2282, 2286, 2291, 2295, 2300, 2304, 2309, 2313,
    2318, 2322, 2327, 2331, 2336, 2340, 2345, 2349, 2353, 2358,
    2362, 2367, 2371, 2376, 2380, 2385, 2389, 2393, 2398, 2402,
    2407, 2411, 2415, 2420, 2424, 2429, 2433, 2437, 2442, 2446,
    2450, 2455, 2459, 2464, 2468, 2472, 2477, 2481, 2485, 2490,
    2494, 2498, 2503, 2507, 2511, 2516, 2520, 2524, 2528, 2533,
    2537, 2541, 2546, 2550, 2554, 2558, 2563, 2567, 2571, 2575,
    2580, 2584, 2588, 2592, 2596, 2601, 2605, 2609, 2613, 2617,
    2622, 2626, 2630, 2634, 2638, 2642, 2647, 2651, 2655, 2659,
    2663, 2667, 2671, 2675, 2679, 2684, 2688, 2692, 2696, 2700,
    2704, 2708, 2712, 2716, 2720, 2724, 2728, 2732, 2736, 2740,
    2744, 2748, 2752, 2756, 2760, 2764, 2768, 2772, 2776, 2780,
    2784, 2788, 2791, 2795, 2799, 2803, 2807, 2811, 2815, 2819,
    2822, 2826, 2830, 2834, 2838, 2841, 2845, 2849, 2853, 2857,
    2860, 2864, 2868, 2872, 2875, 2879, 2883, 2887, 2890, 2894,
    2898, 2901, 2905, 2909, 2912, 2916, 2920, 2923, 2927, 2930,
    2934, 2938, 2941, 2945, 2948, 2952, 2955, 2959, 2962, 2966,
    2969, 2973, 2976, 2980, 2983, 2987, 2990, 2994, 2997, 3001,
    3004, 3007, 3011, 3014, 3018, 3021, 3024, 3028, 3031, 3034,
    3038, 3041, 3044, 3048, 3051, 3054, 3057, 3061, 3064, 3067,
    3070, 3074, 3077, 3080, 3083, 3086, 3090, 3093, 3096, 3099,
    3102, 3105, 3108, 3111, 3114, 3117, 3121, 3124, 3127, 3130,
    3133, 3136, 3139, 3142, 3145, 3148, 3151, 3153, 3156, 3159,
    3162, 3165, 3168, 3171, 3174, 3177, 3179, 3182, 3185, 3188,
    3191, 3193, 3196, 3199, 3202, 3204, 3207, 3210, 3213, 3215,
    3218, 3221, 3223, 3226, 3229, 3231, 3234, 3236, 3239, 3242,
    3244, 3247, 3249, 3252, 3254, 3257, 3259, 3262, 3264, 3267,
    3269, 3272, 3274, 3276, 3279, 3281, 3283, 3286, 3288, 3291,
    3293, 3295, 3297, 3300, 3302, 3304, 3307, 3309, 3311, 3313,
    3315, 3318, 3320, 3322, 3324, 3326, 3328, 3330, 3333, 3335,
    3337, 3339, 3341, 3343, 3345, 3347, 3349, 3351, 3353, 3355,
    3357, 3359, 3361, 3362, 3364, 3366, 3368, 3370, 3372, 3374,
    3375, 3377, 3379, 3381, 3383, 3384, 3386, 3388, 3389, 3391,
    3393, 3394, 3396, 3398, 3399, 3401, 3403, 3404, 3406, 3407,
    3409, 3410, 3412, 3413, 3415, 3416, 3418, 3419, 3421, 3422,
    3424, 3425, 3426, 3428, 3429, 3430, 3432, 3433, 3434, 3436,
    3437, 3438, 3440, 3441, 3442, 3443, 3444, 3446, 3447, 3448,
    3449, 3450, 3451, 3452, 3453, 3454, 3456, 3457, 3458, 3459,
    3460, 3461, 3462, 3463, 3463, 3464, 3465, 3466, 3467, 3468,
    3469, 3470, 3471, 3471, 3472, 3473, 3474, 3474, 3475, 3476,
    3477, 3477, 3478, 3479, 3479, 3480, 3481, 3481, 3482, 3483,
    3483, 3484, 3484, 3485, 3485, 3486, 3486, 3487, 3487, 3488,
    3488, 3488, 3489, 3489, 3490, 3490, 3490, 3491, 3491, 3491,
    3492, 3492, 3492, 3492, 3493, 3493, 3493, 3493, 3493, 3494,
    3494, 3494, 3494, 3494, 3494, 3494, 3494, 3494, 3494, 3494,
    3495, 3494, 3494, 3494, 3494, 3494, 3494, 3494, 3494, 3494,
    3494, 3494, 3493, 3493, 3493, 3493, 3493, 3492, 3492, 3492,
    3492, 3491, 3491, 3491, 3490, 3490, 3490, 3489, 3489, 3488,
    3488, 3488, 3487, 3487, 3486, 3486, 3485, 3485, 3484, 3484,
    3483, 3483, 3482, 3481, 3481, 3480, 3479, 3479, 3478, 3477,
    3477, 3476, 3475, 3474, 3474, 3473, 3472, 3471, 3471, 3470,
    3469, 3468, 3467, 3466, 3465, 3464, 3463, 3463, 3462, 3461,
    3460, 3459, 3458, 3457, 3456, 3454, 3453, 3452, 3451, 3450,
    3449, 3448, 3447, 3446, 3444, 3443, 3442, 3441, 3440, 3438,
    3437, 3436, 3434, 3433, 3432, 3430, 3429, 3428, 3426, 3425,
    3424, 3422, 3421, 3419, 3418, 3416, 3415, 3413, 3412, 3410,
    3409, 3407, 3406, 3404, 3403, 3401, 3399, 3398, 3396, 3394,
    3393, 3391, 3389, 3388, 3386, 3384, 3383, 3381, 3379, 3377,
    3375, 3374, 3372, 3370, 3368, 3366, 3364, 3362, 3361, 3359,
    3357, 3355, 3353, 3351, 3349, 3347, 3345, 3343, 3341, 3339,
    3337, 3335, 3333, 3330, 3328, 3326, 3324, 3322, 3320, 3318,
    3315, 3313, 3311, 3309, 3307, 3304, 3302, 3300, 3297, 3295,
    3293, 3291, 3288, 3286, 3283, 3281, 3279, 3276, 3274, 3272,
    3269, 3267, 3264, 3262, 3259, 3257, 3254, 3252, 3249, 3247,
    3244, 3242, 3239, 3236, 3234, 3231, 3229, 3226, 3223, 3221,
    3218, 3215, 3213, 3210, 3207, 3204, 3202, 3199, 3196, 3193,
    3191, 3188, 3185, 3182, 3179, 3177, 3174, 3171, 3168, 3165,
    3162, 3159, 3156, 3153, 3151, 3148, 3145, 3142, 3139, 3136,
    3133, 3130, 3127, 3124, 3121, 3117, 3114, 3111, 3108, 3105,
    3102, 3099, 3096, 3093, 3090, 3086, 3083, 3080, 3077, 3074,
    3070, 3067, 3064, 3061, 3057, 3054, 3051, 3048, 3044, 3041,
    3038, 3034, 3031, 3028, 3024, 3021, 3018, 3014, 3011, 3007,
    3004, 3001, 2997, 2994, 2990, 2987, 2983, 2980, 2976, 2973,
    2969, 2966, 2962, 2959, 2955, 2952, 2948, 2945, 2941, 2938,
    2934, 2930, 2927, 2923, 2920, 2916, 2912, 2909, 2905, 2901,
    2898, 2894, 2890, 2887, 2883, 2879, 2875, 2872, 2868, 2864,
    2860, 2857, 2853, 2849, 2845, 2841, 2838, 2834, 2830, 2826,
    2822, 2819, 2815, 2811, 2807, 2803, 2799, 2795, 2791, 2788,
    2784, 2780, 2776, 2772, 2768, 2764, 2760, 2756, 2752, 2748,
    2744, 2740, 2736, 2732, 2728, 2724, 2720, 2716, 2712, 2708,
    2704, 2700, 2696, 2692, 2688, 2684, 2679, 2675, 2671, 2667,
    2663, 2659, 2655, 2651, 2647, 2642, 2638, 2634, 2630, 2626,
    2622, 2617, 2613, 2609, 2605, 2601, 2596, 2592, 2588, 2584,
    2580, 2575, 2571, 2567, 2563, 2558, 2554, 2550, 2546, 2541,
    2537, 2533, 2528, 2524, 2520, 2516, 2511, 2507, 2503, 2498,
    2494, 2490, 2485, 2481, 2477, 2472, 2468, 2464, 2459, 2455,
    2450, 2446, 2442, 2437, 2433, 2429, 2424, 2420, 2415, 2411,
    2407, 2402, 2398, 2393, 2389, 2385, 2380, 2376, 2371, 2367,
    2362, 2358, 2353, 2349, 2345, 2340, 2336, 2331, 2327, 2322,
    2318, 2313, 2309, 2304, 2300, 2295, 2291, 2286, 2282, 2278,
    2273, 2269, 2264, 2260, 2255, 2251, 2246, 2242, 2237, 2232,
    2228, 2223, 2219, 2214, 2210, 2205, 2201, 2196, 2192, 2187,
    2183, 2178, 2174, 2169, 2165, 2160, 2156, 2151, 2146, 2142,
    2137, 2133, 2128, 2124, 2119, 2115, 2110, 2106, 2101, 2097,
    2092, 2087, 2083, 2078, 2074, 2069, 2065, 2060, 2056, 2051,
    2047, 2042, 2037, 2033, 2028, 2024, 2019, 2015, 2010, 2006,
    2001, 1996, 1992, 1987, 1983, 1978, 1974, 1969, 1965, 1960,
    1956, 1951, 1947, 1942, 1937, 1933, 1928, 1924, 1919, 1915,
    1910, 1906, 1901, 1897, 1892, 1888, 1883, 1879, 1874, 1870,
    1865, 1861, 1856, 1851, 1847, 1842, 1838, 1833, 1829, 1824,
    1820, 1815, 1811, 1807, 1802, 1798, 1793, 1789, 1784, 1780,
    1775, 1771, 1766, 1762, 1757, 1753, 1748, 1744, 1740, 1735,
    1731, 1726, 1722, 1717, 1713, 1708, 1704, 1700, 1695, 1691,
    1686, 1682, 1678, 1673, 1669, 1664, 1660, 1656, 1651, 1647,
    1643, 1638, 1634, 1629, 1625, 1621, 1616, 1612, 1608, 1603,
    1599, 1595, 1590, 1586, 1582, 1577, 1573, 1569, 1565, 1560,
    1556, 1552, 1547, 1543, 1539, 1535, 1530, 1526, 1522, 1518,
    1513, 1509, 1505, 1501, 1497, 1492, 1488, 1484, 1480, 1476,
    1471, 1467, 1463, 1459, 1455, 1451, 1446, 1442, 1438, 1434,
    1430, 1426, 1422, 1418, 1414, 1409, 1405, 1401, 1397, 1393,
    1389, 1385, 1381, 1377, 1373, 1369, 1365, 1361, 1357, 1353,
    1349, 1345, 1341, 1337, 1333, 1329, 1325, 1321, 1317, 1313,
    1309, 1305, 1302, 1298, 1294, 1290, 1286, 1282, 1278, 1274,
    1271, 1267, 1263, 1259, 1255, 1252, 1248, 1244, 1240, 1236,
    1233, 1229, 1225, 1221, 1218, 1214, 1210, 1206, 1203, 1199,
    1195, 1192, 1188, 1184, 1181, 1177, 1173, 1170, 1166, 1163,
    1159, 1155, 1152, 1148, 1145, 1141, 1138, 1134, 1131, 1127,
    1124, 1120, 1117, 1113, 1110, 1106, 1103, 1099, 1096, 1092,
    1089, 1086, 1082, 1079, 1075, 1072, 1069, 1065, 1062, 1059,
    1055, 1052, 1049, 1045, 1042, 1039, 1036, 1032, 1029, 1026,
    1023, 1019, 1016, 1013, 1010, 1007, 1003, 1000, 997, 994,
    991, 988, 985, 982, 979, 976, 972, 969, 966, 963,
    960, 957, 954, 951, 948, 945, 942, 940, 937, 934,
    931, 928, 925, 922, 919, 916, 914, 911, 908, 905,
    902, 900, 897, 894, 891, 889, 886, 883, 880, 878,
    875, 872, 870, 867, 864, 862, 859, 857, 854, 851,
    849, 846, 844, 841, 839, 836, 834, 831, 829, 826,
    824, 821, 819, 817, 814, 812, 810, 807, 805, 802,
    800, 798, 796, 793, 791, 789, 786, 784, 782, 780,
    778, 775, 773, 771, 769, 767, 765, 763, 760, 758,
    756, 754, 752, 750, 748, 746, 744, 742, 740, 738,
    736, 734, 732, 731, 729, 727, 725, 723, 721, 719,
    718, 716, 714, 712, 710, 709, 707, 705, 704, 702,
    700, 699, 697, 695, 694, 692, 690, 689, 687, 686,
    684, 683, 681, 680, 678, 677, 675, 674, 672, 671,
    669, 668, 667, 665, 664, 663, 661, 660, 659, 657,
    656, 655, 653, 652, 651, 650, 649, 647, 646, 645,
    644, 643, 642, 641, 640, 639, 637, 636, 635, 634,
    633, 632, 631, 630, 630, 629, 628, 627, 626, 625,
    624, 623, 622, 622, 621, 620, 619, 619, 618, 617,
    616, 616, 615, 614, 614, 613, 612, 612, 611, 610,
    610, 609, 609, 608, 608, 607, 607, 606, 606, 605,
    605, 605, 604, 604, 603, 603, 603, 602, 602, 602,
    601, 601, 601, 601, 600, 600, 600, 600, 600, 599,
    599, 599, 599, 599, 599, 599, 599, 599, 599, 599,
    599, 599, 599, 599, 599, 599, 599, 599, 599, 599,
    599, 599, 600, 600, 600, 600, 600, 601, 601, 601,
    601, 602, 602, 602, 603, 603, 603, 604, 604, 605,
    605, 605, 606, 606, 607, 607, 608, 608, 609, 609,
    610, 610, 611, 612, 612, 613, 614, 614, 615, 616,
    616, 617, 618, 619, 619, 620, 621, 622, 622, 623,
    624, 625, 626, 627, 628, 629, 630, 630, 631, 632,
    633, 634, 635, 636, 637, 639, 640, 641, 642, 643,
    644, 645, 646, 647, 649, 650, 651, 652, 653, 655,
    656, 657, 659, 660, 661, 663, 664, 665, 667, 668,
    669, 671, 672, 674, 675, 677, 678, 680, 681, 683,
    684, 686, 687, 689, 690, 692, 694, 695, 697, 699,
    700, 702, 704, 705, 707, 709, 710, 712, 714, 716,
    718, 719, 721, 723, 725, 727, 729, 731, 732, 734,
    736, 738, 740, 742, 744, 746, 748, 750, 752, 754,
    756, 758, 760, 763, 765, 767, 769, 771, 773, 775,
    778, 780, 782, 784, 786, 789, 791, 793, 796, 798,
    800, 802, 805, 807, 810, 812, 814, 817, 819, 821,
    824, 826, 829, 831, 834, 836, 839, 841, 844, 846,
    849, 851, 854, 857, 859, 862, 864, 867, 870, 872,
    875, 878, 880, 883, 886, 889, 891, 894, 897, 900,
    902, 905, 908, 911, 914, 916, 919, 922, 925, 928,
    931, 934, 937, 940, 942, 945, 948, 951, 954, 957,
    960, 963, 966, 969, 972, 976, 979, 982, 985, 988,
    991, 994, 997, 1000, 1003, 1007, 1010, 1013, 1016, 1019,
    1023, 1026, 1029, 1032, 1036, 1039, 1042, 1045, 1049, 1052,
    1055, 1059, 1062, 1065, 1069, 1072, 1075, 1079, 1082, 1086,
    1089, 1092, 1096, 1099, 1103, 1106, 1110, 1113, 1117, 1120,
    1124, 1127, 1131, 1134, 1138, 1141, 1145, 1148, 1152, 1155,
    1159, 1163, 1166, 1170, 1173, 1177, 1181, 1184, 1188, 1192,
    1195, 1199, 1203, 1206, 1210, 1214, 1218, 1221, 1225, 1229,
    1233, 1236, 1240, 1244, 1248, 1252, 1255, 1259, 1263, 1267,
    1271, 1274, 1278, 1282, 1286, 1290, 1294, 1298, 1302, 1305,
    1309, 1313, 1317, 1321, 1325, 1329, 1333, 1337, 1341, 1345,
    1349, 1353, 1357, 1361, 1365, 1369, 1373, 1377, 1381, 1385,
    1389, 1393, 1397, 1401, 1405, 1409, 1414, 1418, 1422, 1426,
    1430, 1434, 1438, 1442, 1446, 1451, 1455, 1459, 1463, 1467,
    1471, 1476, 1480, 1484, 1488, 1492, 1497, 1501, 1505, 1509,
    1513, 1518, 1522, 1526, 1530, 1535, 1539, 1543, 1547, 1552,
    1556, 1560, 1565, 1569, 1573, 1577, 1582, 1586, 1590, 1595,
    1599, 1603, 1608, 1612, 1616, 1621, 1625, 1629, 1634, 1638,
    1643, 1647, 1651, 1656, 1660, 1664, 1669, 1673, 1678, 1682,
    1686, 1691, 1695, 1700, 1704, 1708, 1713, 1717, 1722, 1726,
    1731, 1735, 1740, 1744, 1748, 1753, 1757, 1762, 1766, 1771,
    1775, 1780, 1784, 1789, 1793, 1798, 1802, 1807, 1811, 1815,
    1820, 1824, 1829, 1833, 1838, 1842, 1847, 1851, 1856, 1861,
    1865, 1870, 1874, 1879, 1883, 1888, 1892, 1897, 1901, 1906,
    1910, 1915, 1919, 1924, 1928, 1933, 1937, 1942, 1947, 1951,
    1956, 1960, 1965, 1969, 1974, 1978, 1983, 1987, 1992, 1996,
    2001, 2006, 2010, 2015, 2019, 2024, 2028, 2033, 2037, 2042
};

/* USER CODE END 0 */

/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
  /* USER CODE BEGIN 1 */
  uint8_t n = 0;
  /* USER CODE END 1 */
  

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_DAC1_Init();
  MX_USART2_UART_Init();
  /* USER CODE BEGIN 2 */

  HAL_DAC_Start(&hdac1, DAC_CHANNEL_1);

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
	HAL_DAC_SetValue(&hdac1, DAC_CHANNEL_1, DAC_ALIGN_12B_R, 256 + n++);
	HAL_Delay(1);
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
  }
  /* USER CODE END 3 */
}

/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};

  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  {
    Error_Handler();
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
  {
    Error_Handler();
  }
}

/**
  * @brief DAC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_DAC1_Init(void)
{

  /* USER CODE BEGIN DAC1_Init 0 */

  /* USER CODE END DAC1_Init 0 */

  DAC_ChannelConfTypeDef sConfig = {0};

  /* USER CODE BEGIN DAC1_Init 1 */

  /* USER CODE END DAC1_Init 1 */
  /** DAC Initialization 
  */
  hdac1.Instance = DAC1;
  if (HAL_DAC_Init(&hdac1) != HAL_OK)
  {
    Error_Handler();
  }
  /** DAC channel OUT1 config 
  */
  sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
  if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
  {
    Error_Handler();
  }
  /* USER CODE BEGIN DAC1_Init 2 */

  /* USER CODE END DAC1_Init 2 */

}

/**
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{

  /* USER CODE BEGIN USART2_Init 0 */

  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
  huart2.Init.BaudRate = 38400;
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
  huart2.Init.StopBits = UART_STOPBITS_1;
  huart2.Init.Parity = UART_PARITY_NONE;
  huart2.Init.Mode = UART_MODE_TX_RX;
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  if (HAL_UART_Init(&huart2) != HAL_OK)
  {
    Error_Handler();
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}

/**
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
  __HAL_RCC_GPIOF_CLK_ENABLE();
  __HAL_RCC_GPIOA_CLK_ENABLE();
  __HAL_RCC_GPIOB_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);

  /*Configure GPIO pin : LD2_Pin */
  GPIO_InitStruct.Pin = LD2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);

}

/* USER CODE BEGIN 4 */

/* USER CODE END 4 */

/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}

#ifdef  USE_FULL_ASSERT
/**
  * @brief  Reports the name of the source file and the source line number
  *         where the assert_param error has occurred.
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(char *file, uint32_t line)
{ 
  /* USER CODE BEGIN 6 */
  /* User can add his own implementation to report the file name and line number,
     tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
  /* USER CODE END 6 */
}
#endif /* USE_FULL_ASSERT */

/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
